buildscript {
    ext {
        springBootVersion = '2.3.2.RELEASE'
        springCloudVersion = 'Hoxton.SR8'
        springCloudAlibabaVersion = '2.2.5.RELEASE'
    }

    repositories {
        mavenLocal()
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
            allowInsecureProtocol = true
        }
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    group 'com.wjx'
    version '1.0.0'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'io.spring.dependency-management'

    //指定java版本
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    //指定编码格式
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    tasks.withType(Javadoc) {
        options.encoding = "UTF-8"
    }

    repositories {
        mavenLocal()
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
            allowInsecureProtocol = true
        }
        mavenCentral()
    }

    java {
        withSourcesJar()
        withJavadocJar()
    }

    idea {
        module {
            downloadSources = true
            downloadJavadoc = true
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
        }
    }
}

dependencies {
    implementation project(':jhin-web')
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'com.alibaba.cloud', name: 'spring-cloud-starter-alibaba-nacos-discovery'

}

task 'create-dirs' {
    doLast {
        sourceSets*.java.srcDirs*.each {
            it.mkdirs()
        }
        sourceSets*.resources.srcDirs*.each {
            it.mkdirs()
        }
    }
}
