<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.wjx"/>

    <!--<bean id="user1" class="com.wjx.pojo.com.wjx.mybatis01.domain.User">
        <constructor-arg name="name" value="marry"></constructor-arg>
        <constructor-arg name="age" value="32"></constructor-arg>
    </bean>-->

    <!-- <bean id="object" class="com.wjx.pojo.ObjectDemo">
         &lt;!&ndash;数组类型属性注入&ndash;&gt;
         <property name="arrays">
             <list>
                 <value>jack</value>
                 <value>18</value>
                 <ref bean="user"/>
             </list>
         </property>

         &lt;!&ndash;list数据注入&ndash;&gt;
         <property name="list">
             <list>
                 <value>jack</value>
                 <value>18</value>
                 <ref bean="user"/>
             </list>
         </property>

         &lt;!&ndash;map数据注入&ndash;&gt;
         <property name="map">
             <map>
                 <entry key="name" value="katy"/>
                 <entry key="age" value="18"/>
             </map>
         </property>

         &lt;!&ndash;set数据注入&ndash;&gt;
         <property name="set">
             <set>
                 <value>kafaka</value>
                 <ref bean="user"></ref>
             </set>
         </property>

         &lt;!&ndash;properties数据注入&ndash;&gt;
         <property name="properties">
             <props>
                 <prop key="name">java</prop>
                 <prop key="birthday">1995</prop>
             </props>
         </property>
     </bean>-->

    <bean id="advice" class="com.wjx.aspect.MyAdvice"/>

    <bean id="service" class="com.wjx.service.impl.ServiceImpl"></bean>
    <!--配置aop-->
    <!--<aop:config>
        &lt;!&ndash; 配置切入点
			public void cn.itcast.service.UserServiceImpl.save()
			void cn.itcast.service.UserServiceImpl.save()
			* cn.itcast.service.UserServiceImpl.save()
			* cn.itcast.service.UserServiceImpl.*()

			* cn.itcast.service.*ServiceImpl.*(..)
			* cn.itcast.service..*ServiceImpl.*(..)
		&ndash;&gt;
        <aop:pointcut expression="execution(* com.wjx.service..*Impl.*(..))" id="pc"/>
        <aop:aspect ref="advice">
            &lt;!&ndash; 指定名为before方法作为前置通知 &ndash;&gt;
            <aop:before method="before" pointcut-ref="pc"/>
            &lt;!&ndash; 后置 &ndash;&gt;
            <aop:after-returning method="afterReturning" pointcut-ref="pc"/>
            &lt;!&ndash; 环绕通知 &ndash;&gt;
            <aop:around method="around" pointcut-ref="pc"/>
            &lt;!&ndash; 异常拦截通知 &ndash;&gt;
            <aop:after-throwing method="afterException" pointcut-ref="pc"/>
            &lt;!&ndash; 后置 &ndash;&gt;
            <aop:after method="after" pointcut-ref="pc"/>
        </aop:aspect>
    </aop:config>-->

    <!--加载配置文件-->
    <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:db.properties"/>
    </bean>-->

    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 开启使用注解管理aop事务 -->
    <tx:annotation-driven/>

    <!--配置数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--配置jdbcTemplate-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置transactionManager-->
    <!-- 事务核心管理器,封装了所有事务操作. 依赖于连接池 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置transactionTemplate-->
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <!--&lt;!&ndash; 配置事务通知 &ndash;&gt;
    <tx:advice id="txAdvice" transaction-manager="transactionManager" >
        <tx:attributes>
            &lt;!&ndash; 以方法为单位,指定方法应用什么事务属性
                isolation:隔离级别
                propagation:传播行为
                read-only:是否只读
             &ndash;&gt;
            <tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="persist*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="modify*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="remove*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
            <tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
            <tx:method name="transfer" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
        </tx:attributes>
    </tx:advice>


    &lt;!&ndash; 配置织入 &ndash;&gt;
    <aop:config  >
        &lt;!&ndash; 配置切点表达式 &ndash;&gt;
        <aop:pointcut expression="execution(* com.wjx.service.impl.*ServiceImpl.*(..))" id="txPc"/>
        &lt;!&ndash; 配置切面 : 通知+切点
                 advice-ref:通知的名称
                 pointcut-ref:切点的名称
         &ndash;&gt;
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPc" />
    </aop:config>-->

</beans>